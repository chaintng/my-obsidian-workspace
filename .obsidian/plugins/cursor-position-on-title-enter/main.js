/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var r=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var p=(e,s)=>{for(var t in s)r(e,t,{get:s[t],enumerable:!0})},P=(e,s,t,n)=>{if(s&&typeof s=="object"||typeof s=="function")for(let i of d(s))!h.call(e,i)&&i!==t&&r(e,i,{get:()=>s[i],enumerable:!(n=c(s,i))||n.enumerable});return e};var f=e=>P(r({},"__esModule",{value:!0}),e);var E={};p(E,{default:()=>a});module.exports=f(E);var o=require("obsidian"),w={cursorPosition:"default"},a=class extends o.Plugin{async onload(){console.log("Cursor Position Plugin Loaded"),await this.loadSettings(),this.addSettingTab(new l(this.app,this)),this.registerDomEvent(document,"keydown",t=>{if(t.key==="Enter"){let n=this.app.workspace.activeLeaf;t.srcElement instanceof HTMLElement&&t.srcElement.classList.contains("inline-title")&&this.handleTitleEnter(n)}})}async handleTitleEnter(t){var g;if(!t)return;let n=(g=t.view.sourceMode)==null?void 0:g.cmEditor;if(!n)return;let i=this.settings.cursorPosition||"default";if(i==="beginning")n.setCursor(0,0);else if(i==="end"){let u=n.lastLine();n.setCursor(u,n.getLine(u).length)}}onunload(){console.log("Cursor Position Plugin Unloaded")}async loadSettings(){this.settings=Object.assign({},w,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},l=class extends o.PluginSettingTab{constructor(t,n){super(t,n);this.plugin=n}display(){let{containerEl:t}=this;t.empty(),new o.Setting(t).setName("Cursor position on title enter").setDesc("Choose the cursor behavior when when press enter on note title.").addDropdown(n=>n.addOption("default","Last Known Cursor (Default)").addOption("beginning","Beginning of Note").addOption("end","Last Line of Note").setValue(this.plugin.settings.cursorPosition).onChange(async i=>{this.plugin.settings.cursorPosition=i,await this.plugin.saveSettings()}))}};
