/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var c=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var f=(o,a)=>{for(var t in a)c(o,t,{get:a[t],enumerable:!0})},S=(o,a,t,e)=>{if(a&&typeof a=="object"||typeof a=="function")for(let i of y(a))!T.call(o,i)&&i!==t&&c(o,i,{get:()=>a[i],enumerable:!(e=b(a,i))||e.enumerable});return o};var C=o=>S(c({},"__esModule",{value:!0}),o);var F={};f(F,{default:()=>u});module.exports=C(F);var n=require("obsidian"),k={githubToken:"",imgurClientId:"",showFrontmatter:!0},u=class extends n.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new p(this.app,this)),this.addCommand({id:"publish-note-to-gist",name:"Publish note to GitHub gist",callback:()=>this.publishNoteToGist()})}async publishNoteToGist(){let t=this.app.workspace.getActiveFile();if(!t){new n.Notice("No active file found");return}let e=new n.Notice(`Uploading notes and images: ${t.name}...`,0),i=await this.app.vault.read(t),s=await this.uploadImagesAndReplaceLinks(i),r=s.match(/gist-publish-url: https.*\/(.*)/);this.settings.showFrontmatter||(s=s.replace(/^---\n[\s\S]*?\n---\n/,""));let l=s.match(/^---\n[\s\S]*?\n---\n/),g=l?l[0]:"",h=s.replace(g,""),w=`# ${t.name.replace(/\.[^/.]+$/,"")}

`,d=g+w+h,m=(r?await this.updateGist(r[1],t.name,d):await this.createNewGist(t.name,d)).json.html_url;this.copyLinkToClipboard(m),await this.updateFrontmatter(t,m),e.hide(),new n.Notice("Note published to GitHub gist")}async createNewGist(t,e){return await(0,n.requestUrl)({url:"https://api.github.com/gists",method:"POST",headers:{Authorization:`token ${this.settings.githubToken}`,"Content-Type":"application/json"},body:JSON.stringify({files:{[t]:{content:e}},public:!1})})}async updateGist(t,e,i){return await(0,n.requestUrl)({url:`https://api.github.com/gists/${t}`,method:"PATCH",headers:{Authorization:`token ${this.settings.githubToken}`,"Content-Type":"application/json"},body:JSON.stringify({files:{[e]:{content:i}}})})}async addHeaderToContent(t){let e=await this.app.vault.read(t),s=`# ${t.name}

`+e;await this.app.vault.modify(t,s)}async updateFrontmatter(t,e){let i=await this.app.vault.read(t),s=/^---\n([\s\S]*?)\n---/,r=s.exec(i),l;if(r){let g=r[1],h=g.includes("gist-publish-url")?g.replace(/gist-publish-url: .*/,`gist-publish-url: ${e}`):`${g}
gist-publish-url: ${e}`;l=i.replace(s,`---
${h}
---`)}else l=`---
gist-publish-url: ${e}
---
${i}`;await this.app.vault.modify(t,l)}async uploadImagesAndReplaceLinks(t){let e=/!\[\[(.*?)\]\]/g,i=this.app.workspace.getActiveFile(),s=i?i.path.replace(/[^/]+$/,""):"",r;for(;(r=e.exec(t))!==null;){let l=this.app.metadataCache.getFirstLinkpathDest(r[1],s);if(l==null)continue;let g=await this.app.vault.adapter.readBinary(l.path),h=await this.uploadImageToImgur(g);t=t.replace(r[0],`![Uploaded Image](${h})`)}return t}async uploadImageToImgur(t){return(await(0,n.requestUrl)({url:"https://api.imgur.com/3/image",method:"POST",body:t,headers:{Authorization:`Client-ID ${this.settings.imgurClientId}`,"Content-Type":"application/octet-stream"}})).json.data.link}copyLinkToClipboard(t){navigator.clipboard.writeText(t).then(()=>{new n.Notice("gist URL copied to clipboard")},e=>{new n.Notice("Failed to copy gist URL to clipboard")})}async loadSettings(){this.settings=Object.assign({},k,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},p=class extends n.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new n.Setting(t).setName("GitHub token").setDesc("Enter your GitHub token").addText(e=>e.setPlaceholder("Enter your token").setValue(this.plugin.settings.githubToken).onChange(async i=>{this.plugin.settings.githubToken=i,await this.plugin.saveSettings()})),new n.Setting(t).setName("Imgur client ID").setDesc("Enter your Imgur client ID").addText(e=>e.setPlaceholder("Enter your client ID").setValue(this.plugin.settings.imgurClientId).onChange(async i=>{this.plugin.settings.imgurClientId=i,await this.plugin.saveSettings()})),new n.Setting(t).setName("Show frontmatter").setDesc("Show frontmatter in published note").addToggle(e=>e.setValue(this.plugin.settings.showFrontmatter).onChange(async i=>{this.plugin.settings.showFrontmatter=i,await this.plugin.saveSettings()}))}};

/* nosourcemap */